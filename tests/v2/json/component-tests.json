{
    "SchemaVersion" : "2.0.0",
    "Tests" : [
        { 
            "FileName" : "componentContainerAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerAll.yaml"] 
        },
        { 
            "FileName" : "componentContainerMinimum.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerMinimum.yaml"] 
        },
        { 
            "FileName" : "componentContainerNoName.yaml",
            "ExpectOutcome" : "name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerNoName.yaml"] 
        },
        { 
            "FileName" : "componentContainerMixedCaseName.yaml",
            "ExpectOutcome" : "Does not match pattern",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerMixedCaseName.yaml"] 
        },
        { 
            "FileName" : "componentContainerBadDedicatedPod.yaml",
            "ExpectOutcome" : "Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerBadDedicatedPod.yaml"] 
        },
        { 
            "FileName" : "componentContainerBadEndpointExposure.yaml",
            "ExpectOutcome" : "exposure must be one of the following: \"public\", \"internal\", \"none\"",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerBadEndpointExposure.yaml"] 
        },
        { 
            "FileName" : "componentContainerBadMountSources.yaml",
            "ExpectOutcome" : "Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerBadMountSources.yaml"] 
        },
        { 
            "FileName" : "componentContainerBadEndpointProtocol.yaml",
            "ExpectOutcome" : "protocol must be one of the following: \"http\", \"https\", \"ws\", \"wss\", \"tcp\", \"udp\"",
            "Files": [ "devfiles/components/componentStart.yaml",
                        "devfiles/components/containerBadEndpointProtocol.yaml"] 
        },
        { 
            "FileName" : "componentContainerBadEndpointSecure.yaml",
            "ExpectOutcome" : "Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerBadEndpointSecure.yaml"] 
        },
        { 
            "FileName" : "componentContainerEndpointMissingName.yaml",
            "ExpectOutcome" : "endpoints.0: name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerEndpointMissingName.yaml"] 
        },
        { 
            "FileName" : "componentContainerEndpointMissingPort.yaml",
            "ExpectOutcome" : "endpoints.0: targetPort is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerEndpointMissingPort.yaml"] 
        },
        { 
            "FileName" : "componentContainerEndpointMixedCaseName.yaml",
            "ExpectOutcome" : "Does not match pattern",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerEndpointMixedCaseName.yaml"] 
        },
        { 
            "FileName" : "componentContainerEndpointLongName.yaml",
            "ExpectOutcome" : "String length must be less than or equal to 63",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerEndpointLongName.yaml"] 
        },
        { 
            "FileName" : "componentContainerEnvNoName.yaml",
            "ExpectOutcome" : "env.0: name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerEnvNoName.yaml"] 
        },
        { 
            "FileName" : "componentContainerEnvNoValue.yaml",
            "ExpectOutcome" : "env.0: value is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerEnvNoValue.yaml"] 
        },
        { 
            "FileName" : "componentContainerVolumeMissingName.yaml",
            "ExpectOutcome" : "name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerVolumeMissingName.yaml"] 
        },        
        { 
            "FileName" : "componentContainerNoImage.yaml",
            "ExpectOutcome" : "container: image is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerNoImage.yaml"] 
        },        
        { 
            "FileName" : "componentKubernetesAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesAll.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesMinimum.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesMinimum.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesNoName.yaml",
            "ExpectOutcome" : "name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesNoName.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesMixedCaseName.yaml",
            "ExpectOutcome" : "Does not match pattern",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesMixedCaseName.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesBadEndpointExposure.yaml",
            "ExpectOutcome" : "endpoints.0.exposure must be one of the following: \"public\", \"internal\", \"none\"",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesBadEndpointExposure.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesBadEndpointProtocol.yaml",
            "ExpectOutcome" : "protocol must be one of the following: \"http\", \"https\", \"ws\", \"wss\", \"tcp\", \"udp\"",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesBadEndpointProtocol.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesBadEndpointSecure.yaml",
            "ExpectOutcome" : "Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesBadEndpointSecure.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesEndpointMissingName.yaml",
            "ExpectOutcome" : "endpoints.0: name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesEndpointMissingName.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesEndpointMissingPort.yaml",
            "ExpectOutcome" : "endpoints.0: targetPort is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesEndpointMissingPort.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesEndpointMixedCaseName.yaml",
            "ExpectOutcome" : "Does not match pattern",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesEndpointMixedCaseName.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesEndpointLongName.yaml",
            "ExpectOutcome" : "String length must be less than or equal to 63",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesEndpointLongName.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesMissingInlinedAndUri.yaml",
            "ExpectOutcome" : "kubernetes: uri is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesMissingInlinedAndUri.yaml"] 
        },
        { 
            "FileName" : "componentKubernetesBothInlinedAndUri.yaml",
            "ExpectOutcome" : "kubernetes: Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/kubernetesBothInlinedAndUri.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftAll.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftMinimum.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftMinimum.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftNoName.yaml",
            "ExpectOutcome" : "name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftNoName.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftMixedCaseName.yaml",
            "ExpectOutcome" : "Does not match pattern",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftMixedCaseName.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftBadEndpointExposure.yaml",
            "ExpectOutcome" : "endpoints.0.exposure must be one of the following: \"public\", \"internal\", \"none\"",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftBadEndpointExposure.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftBadEndpointProtocol.yaml",
            "ExpectOutcome" : "protocol must be one of the following: \"http\", \"https\", \"ws\", \"wss\", \"tcp\", \"udp\"",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftBadEndpointProtocol.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftBadEndpointSecure.yaml",
            "ExpectOutcome" : "Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftBadEndpointSecure.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftEndpointMissingName.yaml",
            "ExpectOutcome" : "endpoints.0: name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftEndpointMissingName.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftEndpointMissingPort.yaml",
            "ExpectOutcome" : "endpoints.0: targetPort is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftEndpointMissingPort.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftEndpointMixedCaseName.yaml",
            "ExpectOutcome" : "Does not match pattern",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftEndpointMixedCaseName.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftEndpointLongName.yaml",
            "ExpectOutcome" : "String length must be less than or equal to 63",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftEndpointLongName.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftMissingInlinedAndUri.yaml",
            "ExpectOutcome" : "openshift: uri is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftMissingInlinedAndUri.yaml"] 
        },
        { 
            "FileName" : "componentOpenshiftBothInlinedAndUri.yaml",
            "ExpectOutcome" : "openshift: Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/openshiftBothInlinedAndUri.yaml"] 
        },
        { 
            "FileName" : "componentPluginAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/pluginAll.yaml"] 
        },
        { 
            "FileName" : "componentPluginMinimum.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/pluginMinimum.yaml"] 
        },
        { 
            "FileName" : "componentPluginNoName.yaml",
            "ExpectOutcome" : "name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/pluginNoName.yaml"] 
        },
        { 
            "FileName" : "componentPluginMixedCaseName.yaml",
            "ExpectOutcome" : "Does not match pattern",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/pluginMixedCaseName.yaml"] 
        },
        { 
            "FileName" : "componentPluginContainsPlugin.yaml",
            "ExpectOutcome" : "Additional property plugin is not allowed",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/pluginContainsPlugin.yaml"] 
        },
        { 
            "FileName" : "componentPluginIdAndKubernetes.yaml",
            "ExpectOutcome" : "plugin: Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/pluginIdAndKubernetes.yaml"] 
        },
        { 
            "FileName" : "componentPluginIdAndUri.yaml",
            "ExpectOutcome" : "plugin: Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/pluginIdAndUri.yaml"] 
        },
        { 
            "FileName" : "componentPluginUriAndKubernetes.yaml",
            "ExpectOutcome" : "plugin: Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/pluginUriAndKubernetes.yaml"] 
        },
        { 
            "FileName" : "componentPluginMissingIdUriAndKubernetes.yaml",
            "ExpectOutcome" : "plugin: Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/pluginMissingIdUriAndKubernetes.yaml"] 
        },
        { 
            "FileName" : "componentVolumeAll",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/volumeAll.yaml"] 
        },
        { 
            "FileName" : "componentVolumeNoName",
            "ExpectOutcome" : "name is required",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/volumeNoName.yaml"] 
        },
        { 
            "FileName" : "componentVolumeMixedCaseName.yaml",
            "ExpectOutcome" : "Does not match pattern",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/volumeMixedCaseName.yaml"] 
        },
        { 
            "FileName" : "componentAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/components/componentStart.yaml",
                        "devfiles/components/containerAll.yaml",
                        "devfiles/components/kubernetesAll.yaml",
                        "devfiles/components/openshiftAll.yaml",
                        "devfiles/components/openshiftAll.yaml",
                        "devfiles/components/volumeAll.yaml"] 
        }
    ]                             
}
